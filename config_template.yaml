# Remove the _template from this file name and fill all the field with the corresponding values.
data_to_process_path: "data_to_process_path" # Path where the data to process is stored, it has to be a CSV file with 2 main columns, ImageID, Report.
babel_key : "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" # BabelNet key value, this value is not needed if you're going to just load and execute a model.
lang: "ES" # Language to be used in BabelNet Example: EN, ES


result_file_path: "./result.json" # Path where to save the result.
save_model_path: "./model_saved" # Path where to save the model when is build.
load_model_path: "./model_saved" # Path from where to load the modal.
save_pattern_path: "./pattern.json" # Path where to save the pattern which is going to be used to build the modal.


search_levels: 2 # Search levels depth on the BabelNet graph.
match_levenshtein_distance: 2 # distance that the program use to find match, it uses fuzzy logic with Levenshtein Distance.


waiting_time_on_error: 4000 # waiting time when you spent all your available tokens.
not_wait_when_token_are_spend: false # you can choose either to wait when you spend your tokens or to stop the execution of the program.


lemma_list: [] # List of lemmas to process.
id_list: [] # List of synset identifiers to process.
# If tag_list is going to be used it has to have the same length as id_list.
tag_list: [] # List of tag to be used to represent the ids results.


save_html_view: "./result.html" # Path of the file where the results can be visualized in html format.
dataset_is_lemmatized: True # Whether the project is run with the assumption that the Dataset is lemmatized.